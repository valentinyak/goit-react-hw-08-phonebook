{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/filter/filter-actions.js","redux/filter/filter-reducer.js","redux/contacts/contacts-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/store.js","services/contacts-api.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactList/ContactItem/ContactItem.js","redux/filter/filter-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","redux/auth/auth-selectors.js","components/Views/ContactsView.js","components/Views/HomeView.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/Views/RegisterView.js","components/Views/LoginView.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","filterReducer","createReducer","_","payload","items","contactsActions","action","state","filter","id","isLoading","error","contactsReducer","combineReducers","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","thunkAPI","a","post","data","isLoggedIn","alert","message","rejectWithValue","logIn","operations","logOut","fetchCurrentUser","getState","persistedToken","auth","get","authSlice","createSlice","name","initialState","user","email","isFetchingCurrentUser","extraReducers","authOperations","fulfilled","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","devTools","process","persistor","persistStore","addContactToDB","contact","deleteContactFromDB","delete","getAllContacts","getContactById","createSelector","find","connect","dispatch","addContact","contactsAPI","useSelector","TextField","label","variant","size","style","margin","Fab","color","aria-label","onClick","e","preventDefault","currentTarget","form","nameInput","phoneInput","value","shortid","generate","number","ContactItem","IconButton","width","height","getFilterValue","getFilteredContacts","toLowerCase","includes","onDelete","useDispatch","handleDelete","useEffect","then","response","textAlign","map","onChange","getUserEmail","getIsLoggedIn","getIsFetchingCurrentUser","ContactsView","HomeView","Navigation","to","exact","className","s","link","activeClassName","activeLink","AuthNav","UserMenu","Button","marginRight","styles","padding","border","inputContainer","display","flexDirection","justifyContent","RegisterView","onSubmit","target","password","autoComplete","type","LoginView","PrivateRoute","children","routeProps","redirectTo","PublicRoute","isRestricted","restricted","shouldRedirect","App","AppBar","position","minHeight","path","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bcaf8c76.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n","import { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('filter/changeFilter');\n\nexport default changeFilter;\n","import { createReducer } from '@reduxjs/toolkit';\nimport changeFilter from './filter-actions';\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default filterReducer;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport * as contactsActions from './contacts-actions';\nimport filterReducer from '../filter/filter-reducer';\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (_, action) => action.payload,\n  [contactsActions.addContactsSuccess]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n  [contactsActions.deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload.id),\n});\nconst isLoading = createReducer(false, {\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n\n  [contactsActions.addContactsRequest]: () => true,\n  [contactsActions.addContactsSuccess]: () => false,\n  [contactsActions.addContactsError]: () => false,\n\n  [contactsActions.deleteContactsRequest]: () => true,\n  [contactsActions.deleteContactsSuccess]: () => false,\n  [contactsActions.deleteContactsError]: () => false,\n});\nconst error = createReducer(null, {\n  [contactsActions.fetchContactsError]: (_, action) => action.payload,\n  [contactsActions.fetchContactsRequest]: () => null,\n  [contactsActions.fetchContactsSuccess]: () => null,\n\n  [contactsActions.addContactsError]: (_, action) => action.payload,\n  [contactsActions.addContactsRequest]: () => null,\n  [contactsActions.addContactsSuccess]: () => null,\n\n  [contactsActions.deleteContactsError]: (_, action) => action.payload,\n  [contactsActions.deleteContactsRequest]: () => null,\n  [contactsActions.deleteContactsSuccess]: () => null,\n});\n\nconst contactsReducer = combineReducers({\n  items,\n  isLoading,\n  error,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      data.isLoggedIn = true;\n      return data;\n    } catch (error) {\n      alert(error.message);\n      return thunkAPI.rejectWithValue();\n    }\n  },\n);\n\nconst logIn = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    data.isLoggedIn = true;\n    return data;\n  } catch (error) {\n    alert(error.message);\n    return thunkAPI.rejectWithValue();\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    alert(error.message);\n    return thunkAPI.rejectWithValue();\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      alert(error.message);\n      return thunkAPI.rejectWithValue();\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-slice';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nexport const getContacts = () => {\n  const contacts = axios.get('/contacts').then(response => response.data);\n\n  return contacts;\n};\nexport const addContactToDB = contact => {\n  axios.post('/contacts', contact);\n};\nexport const deleteContactFromDB = contact => {\n  axios.delete(`/contacts/${contact.id}`);\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getAllContacts = state => state.contacts.items;\nexport const getContactById = createSelector(\n  [getAllContacts, (_, id) => id],\n  (contacts, id) => contacts.find(contact => contact.id === id),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport { connect, useSelector } from 'react-redux';\n\nimport * as contactsActions from '../../redux/contacts/contacts-operations';\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\nimport './ContactForm.module.css';\n\nfunction ContactForm({ addContact }) {\n  const state = useSelector(state => state);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { nameInput, phoneInput } = e.currentTarget.form;\n    const isContactExist = getAllContacts(state).find(\n      contact => contact.name === nameInput.value,\n    );\n\n    if (isContactExist) {\n      alert(`${nameInput.value} is already in contacts`);\n      return;\n    }\n\n    addContact({\n      id: shortid.generate(),\n      name: nameInput.value,\n      number: phoneInput.value,\n    });\n\n    nameInput.value = '';\n    phoneInput.value = '';\n  };\n\n  return (\n    <form>\n      <span>Add a contact</span>\n\n      <TextField\n        label=\"Contact name\"\n        variant=\"outlined\"\n        size=\"small\"\n        name=\"nameInput\"\n        style={{ margin: '7px' }}\n      />\n\n      <TextField\n        label=\"Contact number\"\n        variant=\"outlined\"\n        size=\"small\"\n        name=\"phoneInput\"\n        style={{ margin: '7px' }}\n      />\n\n      <Fab\n        size=\"small\"\n        color=\"secondary\"\n        aria-label=\"add\"\n        onClick={handleSubmit}\n      >\n        <AddIcon />\n      </Fab>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: contact => dispatch(contactsActions.addContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n","import * as contactsAPI from '../../services/contacts-api';\nimport * as contactsActions from './contacts-actions';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n\n  try {\n    const contacts = await contactsAPI.getContacts();\n\n    dispatch(contactsActions.fetchContactsSuccess(contacts));\n  } catch (error) {\n    dispatch(contactsActions.fetchContactsError(error));\n  }\n};\n\nexport const addContact = contact => async dispatch => {\n  dispatch(contactsActions.addContactsRequest());\n\n  try {\n    contactsAPI.addContactToDB(contact);\n    dispatch(contactsActions.addContactsSuccess(contact));\n  } catch (error) {\n    dispatch(contactsActions.addContactsError(error));\n  }\n};\n\nexport const deleteContact = contact => async dispatch => {\n  dispatch(contactsActions.deleteContactsRequest());\n\n  try {\n    contactsAPI.deleteContactFromDB(contact);\n    dispatch(contactsActions.deleteContactsSuccess(contact));\n  } catch (error) {\n    dispatch(contactsActions.deleteContactsError(error));\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport default function ContactItem({ contact, onClick }) {\n  const { name, number, id } = contact;\n\n  return (\n    <span>\n      {name}: {number}{' '}\n      <IconButton\n        aria-label=\"delete\"\n        style={{ width: '5px', height: '5px' }}\n        id={id}\n        onClick={onClick}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </span>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string),\n  onClick: PropTypes.func,\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getAllContacts } from '../contacts/contacts-selectors';\n\nexport const getFilterValue = state => state.contacts.filter;\nexport const getFilteredContacts = createSelector(\n  [getAllContacts, getFilterValue],\n  (contacts, filter) =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\n","import React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ContactItem from './ContactItem/ContactItem';\nimport * as contactsActions from '../../redux/contacts/contacts-operations';\nimport * as contactsOperations from '../../redux/contacts/contacts-operations';\nimport { getContactById } from '../../redux/contacts/contacts-selectors';\nimport { getFilteredContacts } from '../../redux/filter/filter-selectors';\n\nfunction ContactList({ contacts, onDelete }) {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const handleDelete = e => {\n    const contact = getContactById(state, e.currentTarget.id);\n    onDelete(contact);\n  };\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul style={{ textAlign: 'left' }}>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <ContactItem contact={contact} onClick={handleDelete} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: contact => dispatch(contactsActions.deleteContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport changeFilter from '../../redux/filter/filter-actions';\nimport { getFilterValue } from '../../redux/filter/filter-selectors';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <TextField\n      label=\"Find contact by name\"\n      variant=\"outlined\"\n      size=\"small\"\n      name=\"filterInput\"\n      onChange={onChange}\n      value={value}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({ value: getFilterValue(state) });\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n","export const getUserEmail = state => state.auth.user.email;\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\nexport const getIsFetchingCurrentUser = state =>\n  state.auth.isFetchingCurrentUser;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\n\nexport default function ContactsView() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <main>\n      {isLoggedIn ? (\n        <>\n          <h1>Phonebook</h1>\n          <ContactForm />\n\n          <h2>Your contacts</h2>\n          <Filter />\n\n          <ContactList />\n        </>\n      ) : (\n        <h1>Please, Login or Register.</h1>\n      )}\n    </main>\n  );\n}\n","export default function HomeView() {\n  return (\n    <main>\n      <h1>Your phonebook here! Please Log in or Register.</h1>\n    </main>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport s from './Navigation.module.css';\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <nav>\n      <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          className={s.link}\n          activeClassName={s.activeLink}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { getUserEmail } from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operations';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const email = useSelector(getUserEmail);\n\n  return (\n    <div>\n      <span>{`You are logged in as ${email} `}</span>\n\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        style={{ marginRight: '15px' }}\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport authOperations from '../../redux/auth/auth-operations';\n\nconst styles = {\n  form: {\n    width: '400px',\n    padding: '10px',\n    border: '1px solid black',\n  },\n  inputContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '250px',\n    margin: '10px',\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = e.target;\n\n    dispatch(\n      authOperations.register({\n        name: name.value,\n        email: email.value,\n        password: password.value,\n      }),\n    );\n  };\n\n  return (\n    <main>\n      <h2>Please fill these fields for register</h2>\n\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          size=\"small\"\n          name=\"email\"\n          autoComplete=\"email\"\n          style={{ margin: '10px' }}\n        />\n\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          size=\"small\"\n          name=\"name\"\n          autoComplete=\"username\"\n          style={{ margin: '10px' }}\n        />\n\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"password\"\n          name=\"password\"\n          autoComplete=\"current-password\"\n          style={{ margin: '10px' }}\n        />\n\n        <Button variant=\"contained\" size=\"small\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </main>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport authOperations from '../../redux/auth/auth-operations';\n\nconst styles = {\n  form: {\n    width: '400px',\n    padding: '10px',\n    border: '1px solid black',\n  },\n  inputContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '250px',\n    margin: '10px',\n  },\n};\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = e.target;\n\n    dispatch(\n      authOperations.logIn({ email: email.value, password: password.value }),\n    );\n  };\n\n  return (\n    <main>\n      <h2>Please log in to see your contacts</h2>\n\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          size=\"small\"\n          name=\"email\"\n          autoComplete=\"email\"\n          style={{ margin: '10px' }}\n        />\n\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"password\"\n          name=\"password\"\n          autoComplete=\"current-password\"\n          style={{ margin: '10px' }}\n        />\n\n        <Button variant=\"contained\" size=\"small\" type=\"submit\">\n          LogIn\n        </Button>\n      </form>\n    </main>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({ children, ...routeProps }) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={routeProps.redirectTo} />}\n    </Route>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\n\nexport default function PublicRoute({ children, ...routeProps }) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const isRestricted = routeProps.restricted;\n  const shouldRedirect = isLoggedIn && isRestricted;\n\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={routeProps.redirectTo} /> : children}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\n\nimport ContactsView from './components/Views/ContactsView';\nimport HomeView from './components/Views/HomeView';\nimport Navigation from './components/Navigation/Navigation';\nimport AuthNav from './components/AuthNav/AuthNav';\nimport UserMenu from './components/UserMenu/UserMenu';\nimport RegisterView from './components/Views/RegisterView';\nimport LoginView from './components/Views/LoginView';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport {\n  getIsLoggedIn,\n  getIsFetchingCurrentUser,\n} from './redux/auth/auth-selectors';\nimport authOperations from './redux/auth/auth-operations';\n\nexport default function App() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const isFetchingCurrentUser = useSelector(getIsFetchingCurrentUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchingCurrentUser && (\n      <>\n        <AppBar\n          position=\"static\"\n          style={{ flexDirection: 'row', minHeight: '60px' }}\n        >\n          <Navigation />\n          {isLoggedIn ? <UserMenu /> : <AuthNav />}\n        </AppBar>\n\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Switch>\n      </>\n    )\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport { store, persistor } from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2QdEW\",\"activeLink\":\"Navigation_activeLink__1MPKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2qbr7\",\"activeLink\":\"AuthNav_activeLink__3mGbv\"};"],"sourceRoot":""}